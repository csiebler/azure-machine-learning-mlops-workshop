# This DevOps pipeline:
# * deploys the ML training pipeline (similar to the previous exercise)

# Disabled for the sake of this workshop
trigger:
- none

pool:
  vmImage: 'ubuntu-20.04'

variables:
  resourcegroup: 'aml-mlops-workshop' # replace with your resource group (same as you've used for the Service Connection)
  workspace: 'aml-mlops-workshop' # replace with your workspace name (same as you've used for the Service Connection)
  aml_compute_target: 'cpu-cluster'

  # Ideally this would be a smaller test data, but for sake of the workshop, let's just reuse it
  test_dataset: 'german-credit-train-tutorial'

  # Azure Resource Manager connection created during pipeline creation
  aml_service_connection: 'aml_workspace'

steps:
- task: UsePythonVersion@0
  displayName: 'Setting Python version'
  inputs:
    versionSpec: '3.7'

- task: Bash@3
  displayName: 'Install Requirements'
  inputs:
    filePath: devops-common-files/install_requirements.sh

- task: AzureCLI@2
  displayName: 'Install the az ml CLI'
  inputs:
    azureSubscription: '$(aml_service_connection)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      az extension add -n azure-cli-ml

- task: AzureCLI@2
  displayName: 'Attach folder to AML workspace (authenticate)'
  inputs:
    azureSubscription: '$(aml_service_connection)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      az ml folder attach -w $(workspace) -g $(resourcegroup)

- task: AzureCLI@2
  displayName: 'Create AML Compute Target (will skip if it already exists)'
  inputs:
    azureSubscription: '$(aml_service_connection)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      az ml computetarget create amlcompute -n $(aml_compute_target) --min-nodes 0 --max-nodes 1 -s STANDARD_D3_V2

- task: AzureCLI@2
  displayName: 'Deploy pipeline to AML'
  inputs:
    azureSubscription: '$(aml_service_connection)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      python devops-deploy-pipeline-with-tests/deploy_pipeline.py

- task: AzureCLI@2
  displayName: 'Test training pipeline functionally with small training dataset'
  inputs:
    azureSubscription: '$(aml_service_connection)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      export PIPELINE_ID=$(pipeline_id)
      export DATASET_NAME=$(test_dataset)
      pytest --junitxml=junit/TEST-training-pipeline.xml devops-deploy-pipeline-with-tests/

- task: PublishTestResults@2
  displayName: 'Publish test results from pipeline test run'
  inputs:
    testRunTitle: 'Test results for published pipeline'

- task: AzureCLI@2
  displayName: 'Add pipeline to Pipeline Endpoint'
  inputs:
    azureSubscription: '$(aml_service_connection)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      export PIPELINE_ID=$(pipeline_id)
      python devops-deploy-pipeline-with-tests/add_to_pipeline_endpoint.py